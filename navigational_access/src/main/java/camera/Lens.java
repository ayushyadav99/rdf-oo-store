package camera;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Lens <br>
 * @version generated on Sun May 16 18:13:09 IST 2021 by ayushyadav
 */

public interface Lens extends PurchaseableItem {

    /* ***************************************************
     * Property http://www.xfront.com/owl/ontologies/camera/#compatibleWith
     */
     
    /**
     * Gets all property values for the compatibleWith property.<p>
     * 
     * @returns a collection of values for the compatibleWith property.
     */
    Collection<? extends Body> getCompatibleWith();

    /**
     * Checks if the class has a compatibleWith property value.<p>
     * 
     * @return true if there is a compatibleWith property value.
     */
    boolean hasCompatibleWith();

    /**
     * Adds a compatibleWith property value.<p>
     * 
     * @param newCompatibleWith the compatibleWith property value to be added
     */
    void addCompatibleWith(Body newCompatibleWith);

    /**
     * Removes a compatibleWith property value.<p>
     * 
     * @param oldCompatibleWith the compatibleWith property value to be removed.
     */
    void removeCompatibleWith(Body oldCompatibleWith);


    /* ***************************************************
     * Property http://www.xfront.com/owl/ontologies/camera/#cost
     */
     
    /**
     * Gets all property values for the cost property.<p>
     * 
     * @returns a collection of values for the cost property.
     */
    Collection<? extends Money> getCost();

    /**
     * Checks if the class has a cost property value.<p>
     * 
     * @return true if there is a cost property value.
     */
    boolean hasCost();

    /**
     * Adds a cost property value.<p>
     * 
     * @param newCost the cost property value to be added
     */
    void addCost(Money newCost);

    /**
     * Removes a cost property value.<p>
     * 
     * @param oldCost the cost property value to be removed.
     */
    void removeCost(Money oldCost);


    /* ***************************************************
     * Property http://www.xfront.com/owl/ontologies/camera/#aperture
     */
     
    /**
     * Gets all property values for the aperture property.<p>
     * 
     * @returns a collection of values for the aperture property.
     */
    Collection<? extends String> getAperture();

    /**
     * Checks if the class has a aperture property value.<p>
     * 
     * @return true if there is a aperture property value.
     */
    boolean hasAperture();

    /**
     * Adds a aperture property value.<p>
     * 
     * @param newAperture the aperture property value to be added
     */
    void addAperture(String newAperture);

    /**
     * Removes a aperture property value.<p>
     * 
     * @param oldAperture the aperture property value to be removed.
     */
    void removeAperture(String oldAperture);



    /* ***************************************************
     * Property http://www.xfront.com/owl/ontologies/camera/#f-stop
     */
     
    /**
     * Gets all property values for the f_stop property.<p>
     * 
     * @returns a collection of values for the f_stop property.
     */
    Collection<? extends String> getF_stop();

    /**
     * Checks if the class has a f_stop property value.<p>
     * 
     * @return true if there is a f_stop property value.
     */
    boolean hasF_stop();

    /**
     * Adds a f_stop property value.<p>
     * 
     * @param newF_stop the f_stop property value to be added
     */
    void addF_stop(String newF_stop);

    /**
     * Removes a f_stop property value.<p>
     * 
     * @param oldF_stop the f_stop property value to be removed.
     */
    void removeF_stop(String oldF_stop);



    /* ***************************************************
     * Property http://www.xfront.com/owl/ontologies/camera/#focal-length
     */
     
    /**
     * Gets all property values for the focal_length property.<p>
     * 
     * @returns a collection of values for the focal_length property.
     */
    Collection<? extends String> getFocal_length();

    /**
     * Checks if the class has a focal_length property value.<p>
     * 
     * @return true if there is a focal_length property value.
     */
    boolean hasFocal_length();

    /**
     * Adds a focal_length property value.<p>
     * 
     * @param newFocal_length the focal_length property value to be added
     */
    void addFocal_length(String newFocal_length);

    /**
     * Removes a focal_length property value.<p>
     * 
     * @param oldFocal_length the focal_length property value to be removed.
     */
    void removeFocal_length(String oldFocal_length);



    /* ***************************************************
     * Property http://www.xfront.com/owl/ontologies/camera/#size
     */
     
    /**
     * Gets all property values for the size property.<p>
     * 
     * @returns a collection of values for the size property.
     */
    Collection<? extends String> getSize();

    /**
     * Checks if the class has a size property value.<p>
     * 
     * @return true if there is a size property value.
     */
    boolean hasSize();

    /**
     * Adds a size property value.<p>
     * 
     * @param newSize the size property value to be added
     */
    void addSize(String newSize);

    /**
     * Removes a size property value.<p>
     * 
     * @param oldSize the size property value to be removed.
     */
    void removeSize(String oldSize);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
