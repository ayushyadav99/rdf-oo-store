package travel.impl;

import travel.*;


import java.net.URI;
import java.io.Serializable;
import javax.jdo.annotations.Embedded;
import javax.persistence.Basic;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;

import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultHotel <br>
 * @version generated on Sun May 16 18:22:29 IST 2021 by ayushyadav
 */
@Entity
 public class DefaultHotel extends WrappedIndividualImpl implements Hotel , Serializable {
	 private static final long serialVersionUID = 1L;
	 @GeneratedValue
	 private long id;
	 @Id 
	 private String name;

private Collection < ? extends AccommodationRating > HasRating ;

    public DefaultHotel(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
	name = iri.toString();
	
	HasRating= getHasRating();
    }





    /* ***************************************************
     * Object Property http://www.owl-ontologies.com/travel.owl#hasRating
     */
     
    public Collection<? extends AccommodationRating> getHasRating() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASRATING,
                                               DefaultAccommodationRating.class);
    }

    public boolean hasHasRating() {
	   return !getHasRating().isEmpty();
    }

    public void addHasRating(AccommodationRating newHasRating) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASRATING,
                                       newHasRating);
    }

    public void removeHasRating(AccommodationRating oldHasRating) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASRATING,
                                          oldHasRating);
    }


}
