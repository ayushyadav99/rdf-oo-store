package travel;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Contact <br>
 * @version generated on Sun May 16 18:22:29 IST 2021 by ayushyadav
 */

public interface Contact extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.owl-ontologies.com/travel.owl#hasCity
     */
     
    /**
     * Gets all property values for the hasCity property.<p>
     * 
     * @returns a collection of values for the hasCity property.
     */
    Collection<? extends String> getHasCity();

    /**
     * Checks if the class has a hasCity property value.<p>
     * 
     * @return true if there is a hasCity property value.
     */
    boolean hasHasCity();

    /**
     * Adds a hasCity property value.<p>
     * 
     * @param newHasCity the hasCity property value to be added
     */
    void addHasCity(String newHasCity);

    /**
     * Removes a hasCity property value.<p>
     * 
     * @param oldHasCity the hasCity property value to be removed.
     */
    void removeHasCity(String oldHasCity);



    /* ***************************************************
     * Property http://www.owl-ontologies.com/travel.owl#hasEMail
     */
     
    /**
     * Gets all property values for the hasEMail property.<p>
     * 
     * @returns a collection of values for the hasEMail property.
     */
    Collection<? extends String> getHasEMail();

    /**
     * Checks if the class has a hasEMail property value.<p>
     * 
     * @return true if there is a hasEMail property value.
     */
    boolean hasHasEMail();

    /**
     * Adds a hasEMail property value.<p>
     * 
     * @param newHasEMail the hasEMail property value to be added
     */
    void addHasEMail(String newHasEMail);

    /**
     * Removes a hasEMail property value.<p>
     * 
     * @param oldHasEMail the hasEMail property value to be removed.
     */
    void removeHasEMail(String oldHasEMail);



    /* ***************************************************
     * Property http://www.owl-ontologies.com/travel.owl#hasStreet
     */
     
    /**
     * Gets all property values for the hasStreet property.<p>
     * 
     * @returns a collection of values for the hasStreet property.
     */
    Collection<? extends String> getHasStreet();

    /**
     * Checks if the class has a hasStreet property value.<p>
     * 
     * @return true if there is a hasStreet property value.
     */
    boolean hasHasStreet();

    /**
     * Adds a hasStreet property value.<p>
     * 
     * @param newHasStreet the hasStreet property value to be added
     */
    void addHasStreet(String newHasStreet);

    /**
     * Removes a hasStreet property value.<p>
     * 
     * @param oldHasStreet the hasStreet property value to be removed.
     */
    void removeHasStreet(String oldHasStreet);



    /* ***************************************************
     * Property http://www.owl-ontologies.com/travel.owl#hasZipCode
     */
     
    /**
     * Gets all property values for the hasZipCode property.<p>
     * 
     * @returns a collection of values for the hasZipCode property.
     */
    Collection<? extends Integer> getHasZipCode();

    /**
     * Checks if the class has a hasZipCode property value.<p>
     * 
     * @return true if there is a hasZipCode property value.
     */
    boolean hasHasZipCode();

    /**
     * Adds a hasZipCode property value.<p>
     * 
     * @param newHasZipCode the hasZipCode property value to be added
     */
    void addHasZipCode(Integer newHasZipCode);

    /**
     * Removes a hasZipCode property value.<p>
     * 
     * @param oldHasZipCode the hasZipCode property value to be removed.
     */
    void removeHasZipCode(Integer oldHasZipCode);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
